---
name: BiocCheck ☣️

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_GITHUB_TOKEN:
        description: |
          Github token with read access to repositories, required for staged.dependencies installation
        required: false
    inputs:
      enable-bioccheck:
        description: Enable BiocCheck
        required: false
        type: boolean
        default: false
      install-system-dependencies:
        description: Check for and install system dependencies
        required: false
        default: false
        type: boolean
      enable-staged-dependencies-check:
        description: Enable staged dependencies YAML check
        required: false
        default: false
        type: boolean
      allow-failure:
        description: BiocCheck errors will not fail, but will give a warning
        required: false
        type: boolean
        default: false
      sd-direction:
        description: The direction to use to install staged dependencies. Choose between 'upstream', 'downstream' and 'all'
        required: false
        type: string
        default: upstream

concurrency:
  group: bioccheck-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bioccheck:
    strategy:
      fail-fast: false
      matrix:
        config:
          - image: ghcr.io/insightsengineering/rstudio_4.2.2_bioc_3.16
            tag: latest
    name: ${{ matrix.config.image }}, version ${{ matrix.config.tag }}
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip bioccheck]')
        && contains(inputs.enable-bioccheck, 'true')
        && github.event.pull_request.draft == false
    container:
      image: ${{ matrix.config.image }}:${{ matrix.config.tag }}

    steps:
      - name: Setup token 🔑
        id: github-token
        run: |
          if [ "${{ secrets.REPO_GITHUB_TOKEN }}" == "" ]; then
            echo "REPO_GITHUB_TOKEN is empty. Substituting it with GITHUB_TOKEN."
            echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "Using REPO_GITHUB_TOKEN."
            echo "token=${{ secrets.REPO_GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Get branch names 🌿
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Checkout repo (PR) 🛎
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          path: ${{ github.event.repository.name }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout repo 🛎
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          path: ${{ github.event.repository.name }}

      - name: Restore SD cache 💰
        uses: actions/cache@v3
        with:
          key: sd-${{ runner.os }}-${{ github.event.repository.name }}
          path: ~/.staged.dependencies

      - name: Run Staged dependencies 🎦
        uses: insightsengineering/staged-dependencies-action@v1
        env:
          GITHUB_PAT: ${{ steps.github-token.outputs.token }}
        with:
          path: ${{ github.event.repository.name }}
          enable-check: ${{ inputs.enable-staged-dependencies-check }}
          run-system-dependencies: ${{ inputs.install-system-dependencies }}
          direction: ${{ inputs.sd-direction }}

      - name: Run BiocCheck ☣️
        uses: insightsengineering/bioc-check-action@v1
        with:
          path: ${{ github.event.repository.name }}
          no-check-version-num: true
          allow-failure: ${{ inputs.allow-failure }}
