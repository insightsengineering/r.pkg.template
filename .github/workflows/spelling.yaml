---
name: Spelling 🆎

on:
  push:
    branches:
      - main
      - pre-release
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
      - pre-release
  workflow_dispatch:
  workflow_call:

concurrency:
  group: spelling-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  spelling:
    name: Check spelling 🔠
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip spelling]')
        && github.event.pull_request.draft == false
    container:
      image: ghcr.io/insightsengineering/rstudio_4.2.1_bioc_3.15:latest

    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v3

      - name: Run Spellcheck 👟
        uses: insightsengineering/r-spellcheck-action@v2
        with:
          exclude: inst/extdata/*

  grammar:
    name: Check grammar 🔡
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip spelling]')
        && github.event.pull_request.draft == false

    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v3

      - name: Setup NodeJS ☊
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install write-good ⏬
        run: npm install write-good glob

      - name: Run write-good 🏃‍♀️
        uses: actions/github-script@6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const glob = require('glob');
            const writeGood = require('write-good');
            const path = require('path');
            let files = glob.sync('**/*.@(Rd|Rmd|qmd|md)');
            let allSuggestions = [];
            files.forEach((file) => {
              if (fs.lstatSync(file).isFile() && 
                  !path.dirname(file).startsWith("node_modules")) {
                const contents = fs.readFileSync(file, 'utf8');
                const suggestions = writeGood(contents);
                const annotations = writeGood.annotate(contents, suggestions, true);
                if (annotations.length) {
                  for (var i=0; i < annotations.length; i++) {
                    let ann = annotations[i];
                    ann['message'] = ann['reason'];
                    ann['column'] = {};
                    ann['column'].start = ann['col'];
                    ann['column'].end = ann['col'];
                    const line = ann['line'];
                    delete ann['line'];
                    ann['line'] = {};
                    ann['line']['start'] = line;
                    ann['line']['end'] = line;
                    ann['level'] = 'notice';
                    ann['path'] =  file;
                    delete ann['reason'];
                    delete ann['col'];
                    allSuggestions.push(ann);
                  }
                }
              }
            });
            fs.writeFileSync('/tmp/annotations.json', JSON.stringify(allSuggestions, null, 2) , 'utf-8');

      - name: Annotate files for grammar suggestions ✍️
        uses: Attest/annotations-action@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          input: '/tmp/annotations.json'
          title: Grammar Annotations
