---
name: Pkgdown Docs üìö

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
    paths:
      - inst/templates/**
      - _pkgdown.yaml
      - DESCRIPTION
      - "**.md"
      - "**.Rmd"
      - man/**
      - LICENSE.*
      - NAMESPACE
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_GITHUB_TOKEN:
        description: |
          Github token with read access to repositories, required for staged.dependencies installation
        required: false
    inputs:
      install-system-dependencies:
        description: Check for and install system dependencies
        required: false
        default: false
        type: boolean
      fail-pkgdown-on-warnings:
        description: Fail the pkgdown workflow if warnings are generated while generating docs
        required: false
        default: false
        type: boolean
      enable-staged-dependencies-check:
        description: Enable staged dependencies YAML check
        required: false
        default: false
        type: boolean
      additional-env-vars:
        description: |
          Extra environment variables, as a 'key=value' pair, with each pair on a new line.
          Example usage:
          additional-env-vars: |
            ABC=123
            XYZ=456
        required: false
        default: ""
        type: string

concurrency:
  group: docs-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  docs:
    name: Generate üê£
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip docs]')
        && github.event.pull_request.draft == false
    container:
      image: ghcr.io/insightsengineering/rstudio_4.2.1_bioc_3.15:latest
    steps:
      - name: Get branch names üåø
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Checkout repo (PR) üõé
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          path: ${{ github.event.repository.name }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout repo üõé
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          path: ${{ github.event.repository.name }}

      - name: Restore SD cache üí∞
        uses: actions/cache@v3
        with:
          key: sd-${{ runner.os }}-${{ github.event.repository.name }}
          path: ~/.staged.dependencies

      - name: Run Staged dependencies üé¶
        uses: insightsengineering/staged-dependencies-action@v1
        env:
          GITHUB_PAT: ${{ secrets.REPO_GITHUB_TOKEN }}
        with:
          path: ${{ github.event.repository.name }}
          enable-check: ${{ inputs.enable-staged-dependencies-check }}
          run-system-dependencies: ${{ inputs.install-system-dependencies }}

      - name: Install R package üöß
        run: |
          if (file.exists("renv.lock")) renv::restore()
          install.packages(".", repos=NULL, type="source")
        shell: Rscript {0}
        working-directory: ${{ github.event.repository.name }}

      - name: Build docs üèó
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: |
          repo="${{ github.event.repository.name }}"
          if [ "${{ inputs.additional-env-vars }}" != "" ]
          then {
            echo -e "${{ inputs.additional-env-vars }}" > /tmp/dotenv.env
            export $(tr '\n' ' ' < /tmp/dotenv.env)
          }
          fi
          Rscript - <<EOF 2>&1 | tee pkgdown_${repo}.log
          if (file.exists("renv.lock")) renv::restore()
          pkgdown::build_site(devel = TRUE)
          EOF
          if [ "${{ inputs.fail-pkgdown-on-warnings }}" == "true" ]; then {
            grep "Warning message" pkgdown_${repo}.log > pkgdown_warnings_${repo}.log
            if [[ $(wc -l <pkgdown_warnings_${repo}.log) -gt 0 ]]; then {
              echo "----------------------------------------"
              echo "‚ö† One or more warnings were generated during the pkgdown build."
              echo "Please üôè fix the warnings shown above üëÜ"
              exit 1
            }
            fi
          }
          fi
        shell: bash
        working-directory: ${{ github.event.repository.name }}

      - name: Create documentation artifact üìÇ
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        run: |
          pushd ${{ github.event.repository.name }}/docs/
          zip -r9 $OLDPWD/pkgdown.zip *
          popd
        shell: bash

      - name: Upload docs for review ‚¨Ü
        if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v3
        with:
          name: pkgdown.zip
          path: pkgdown.zip

      - name: Publish docs üì¢
        if: github.event_name == 'push'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          BRANCH_OR_TAG="${GITHUB_REF##*/}"
          Rscript - <<EOF
          if (file.exists("renv.lock")) renv::restore()
          pkgdown::deploy_to_branch(
            new_process = FALSE,
            subdir = "${BRANCH_OR_TAG}",
            clean = TRUE
          )
          EOF
        shell: bash
        working-directory: ${{ github.event.repository.name }}

  multi-version-docs:
    name: Multi-version docs üìë
    needs: docs
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push'
        && !contains(github.event.commits[0].message, '[skip docs]')
    steps:
      - name: Checkout repo üõé
        uses: actions/checkout@v3
        with:
          path: ${{ github.event.repository.name }}
          ref: "gh-pages"

      - name: Create and publish docs ‚ÜóÔ∏è
        uses: insightsengineering/r-pkgdown-multiversion@v2
        with:
          path: ${{ github.event.repository.name }}
          default-landing-page: "main"

  upload-release-assets:
    name: Upload documentation assets üîº
    needs: docs
    runs-on: ubuntu-latest
    if: >
      startsWith(github.ref, 'refs/tags/v')
        && !contains(github.event.commits[0].message, '[skip docs]')
    steps:
      - name: Checkout repo üõé
        uses: actions/checkout@v3

      - name: Download artifact ‚è¨
        uses: actions/download-artifact@v3
        with:
          name: pkgdown.zip

      - name: Upload binaries to release ‚§¥
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: pkgdown.zip
          asset_name: pkgdown.zip
          tag: ${{ github.ref }}
          overwrite: true
