---
name: Version bump ⬆

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    secrets:
      REPO_GITHUB_TOKEN:
        description: Github token with write access to the repo
        required: false
    inputs:
      disable-precommit-autoupdate:
        description: Disable precommit autoupdate
        required: false
        default: false
        type: boolean

concurrency:
  group: vbump-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  vbump:
    name: Bump version ⤴
    runs-on: ubuntu-latest
    if: |
      !(contains(github.event.commits[0].message, '[skip vbump]') ||
        contains(github.event.head_commit.message, '[skip vbump]')
      )
    container:
      image: docker.io/rocker/tidyverse:4.2.2

    steps:
      - name: Setup token 🔑
        id: github-token
        run: |
          if [ "${{ secrets.REPO_GITHUB_TOKEN }}" == "" ]; then
            echo "REPO_GITHUB_TOKEN is empty. Substituting it with GITHUB_TOKEN."
            echo "token=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "Using REPO_GITHUB_TOKEN."
            echo "token=${{ secrets.REPO_GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Checkout repo 🛎
        uses: actions/checkout@v3
        with:
          token: ${{ steps.github-token.outputs.token }}

      - name: Bump version in DESCRIPTION 📜
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: desc::desc_bump_version("dev", normalize = TRUE)
        shell: Rscript {0}

      - name: Update Date field 📅
        run: if (desc::desc_has_fields("Date")) desc::desc_set("Date", Sys.Date())
        shell: Rscript {0}

      - name: Bump version in NEWS.md 📰
        run: |
          git config --global --add safe.directory $(pwd)
          DESC_VERSION=$(R --slave -e 'cat(paste(desc::desc_get_version()))')
          NEWS_VERSION=$(awk '/^#+ /{print $3; exit}' NEWS.md)
          sed -i "s/$NEWS_VERSION/$DESC_VERSION/" NEWS.md
          NEWS_VERSION=$(awk '/^#+ /{print $3; exit}' NEWS.md)
          echo "Updated NEWS.md version: $NEWS_VERSION"
          if (test $DESC_VERSION != $NEWS_VERSION ); then
            echo "🙈 Updated NEWS.md and DESCRIPTION have different versions!"
            echo "Please ensure that the versions in the NEWS.md and DESCRIPTION are the same 🙏"
            exit 1
          fi
          echo "NEW_PKG_VERSION=${DESC_VERSION}" >> $GITHUB_ENV
        shell: bash

      - name: Check if a pre-commit config exists
        id: precommit-config-exists
        uses: andstor/file-existence-action@v2
        with:
          files: ".pre-commit-config.yaml"

      - name: Setup Python 🐍
        if: |
          inputs.disable-precommit-autoupdate != 'true' &&
            steps.precommit-config-exists.outputs.files_exists == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Precommit autoupdate 🅿️
        if: |
          inputs.disable-precommit-autoupdate != 'true' &&
            steps.precommit-config-exists.outputs.files_exists == 'true'
        run: |
          python -m pip -q install pre-commit
          pre-commit autoupdate

      - name: Commit and push changes 📌
        if: ${{ env.NEW_PKG_VERSION }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[skip actions] Bump version to ${{ env.NEW_PKG_VERSION }}"
          file_pattern: NEWS.md DESCRIPTION .pre-commit-config.yaml
          commit_user_name: insights-engineering-bot
          commit_user_email: >-
            68416928+insights-engineering-bot@users.noreply.github.com
        continue-on-error: true
